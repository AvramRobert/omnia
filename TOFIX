CURRENT TASK:

 * Move the evaluation history from the repl to the store
 * Test the new store evaluation history thoroughly
 * Move `inject` implementation from `hud` to `context`
 * Adapt `text-event` function. Apply the change on the `input-area` in the context and then use
   `switch-input-area` to reset it in the hud. Remove `input` from hud
 * Remove the evaluation history from the context
 * Remove the evaluation history from the nrepl. Make the nrepl stateless
 * Clean-up code
 * Write a `resets-docs` test for the context


Global issues:
 * Remove the nrepl-client from the Hud
 * Move the history logic from text to the context and write tests for it (migrate existing tests from text aswell)
 * Clean-up test code afterwards
 * Add rendering strategy to the context

omnia.repl.text issues:
  - remove the text history from the text itself
        -> define a separate component that is carried recursively with the repl processing as a separate parameter.
        -> That way, the text won't become large and the transformations will be quick.
        -> Perhaps we can put the repl's evaluation history inside this construct aswell

  - the clipboard doesn't need to be a focken text, does it??!
  - the history doesn't need to have a focken clipboard either, does it??
    Come to think of it, the history needn't be a text either -_-
  - debug-string should also display the selection and cursor
  - Change the primitive hierarchy in the text.core implementation (enrich and probably peer are top primitives) (peer [previous current next])
  - Reverse parameter order?

omnia.display.terminal issues:
  - Fix lanterna deprecation of `TextCharacter`

Finishing touches:
  - Rewrite README, replace logo, keep it a bit simple

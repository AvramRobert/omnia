CURRENT TASK:


Global issues:
 * Move the history logic from text to the context and write tests for it (migrate existing tests from text aswell)
 * Remove the nrepl-client from the Hud
 * Clean-up test code afterwards
 * Add rendering strategy to the context
 * Give the hud a function with which it can enrich the input
   Almost everything that happens externally (like evaluation, history tracking etc) takes the input and replaces
   it with something else. A function that simply enriches the input can be the general way of adding something
   to the hud.
 * I can define a schema that checks protocols properly. Replace all places that reference
   - omnia.display.terminal/Terminal with omnia.schema.terminal/Terminal

omnia.repl.text issues:
  - remove the text history from the text itself
        -> define a separate component that is carried recursively with the repl processing as a separate parameter.
        -> That way, the text won't become large and the transformations will be quick.
        -> Perhaps we can put the repl's evaluation history inside this construct aswell

  - the clipboard doesn't need to be a focken text, does it??!
  - the history doesn't need to have a focken clipboard either, does it??
    Come to think of it, the history needn't be a text either -_-
  - debug-string should also display the selection and cursor
  - Change the primitive hierarchy in the text.core implementation (enrich and probably peer are top primitives) (peer [previous current next])
  - Reverse parameter order?

omnia.repl.context issues:
  - perhaps there is a way of removing the NReplClient from the Context

omnia.display.terminal issues:
  - Fix lanterna deprecation of `TextCharacter`

Finishing touches:
  - Rewrite README, replace logo, keep it a bit simple
